/* 자바 스레드 */
/**
 * - 자바 스레드
 * 		- JVM에 관리되고 스케줄, 실행됨
 * - 응용 프로그램 하나당 JVM 하나
 * 		- 응용 프로그램 하나당 여러 개의 스레드 가질 수 있음
 * 
 * - 자바 스레드 작성 방법
 * 	1) Thread 클래스 
 * 	2) Runnable 인터페이스
 * 
 * - 데몬 스레드 vs. 사용자 스레드
 * 		- 데몬 스레드
 * 			- 응용 프로그램이 실행되는 동안 관리를 위해 존재하는 스레드
 * 			- 데몬 스레드가 살아 있더라도 사용자 스레드가 모두 종료되면, JVM과 함께 응용 프로그램도 종료
 * 			- Thread 클래스의 setDemon(true) 호출 시, 사용자 스레드 -> 데몬 스레드로 전환 가능
 * 			ex. 가비지 컬렉션 스레드
 * 		
 * 		- 사용자 스레드
 * 			- 응용 프로그램에서 생성한 스레드
 * 			ex. main() 메소드 실행하는 main 스레드 
 * 
 * - 스레드 상태
 * 		- yield
 * 			실행 중인 스레드가 호출할 경우, 다른 스레드가 스케줄링 될 수 있도록 양보하겠다는 의미.
 * 			해당 스레드는 준비 상태로 변경되고, 새 스케줄링을 실시한다.
 * 		- 우선순위
 * 			- 1~10 사이 우선순위를 가짐
 * 			- 기본 우선순위값(=보통값)은 5
 * 			- 자식 스레드는 생성될 때 부모 스레드의 우선순위값 물려받음
 * 			- 우선순위 변경 가능
 * 				void setPriority(int newPriority)
 * 			- **자바는 철저히 우선순위 기반 스케줄링! -> 따로 우선순위 변경하지 않는 이상 우선순위 낮은 스레드는 우선순위 높은 스레드가 종료될 때까지 실행될 수 없음
 * 		- main() 스레드
 * 			- 자바 응용 프로그램 실행 직전, JVM은 사용자 스레드인 main 스레드 하나 만들고, 이 스레드로 main() 메소드 실행함
 * 				- 실행 시작주소는 main() 메소드의 첫 코드
 * 			- 응용 프로그램의 main() 메소드 실행 순간 2개의 스레드 존재
 * 				- main 스레드, 가비지컬렉션 스레드 
 * */

public class Ch13_01_Thread {

}
